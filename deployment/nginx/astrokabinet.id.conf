server {
    listen 80;
    listen [::]:80;
    server_name astrokabinet.id www.astrokabinet.id;

    # Redirect www to non-www and HTTP to HTTPS
    if ($host = www.astrokabinet.id) {
        return 301 https://astrokabinet.id$request_uri;
    }
    return 301 https://astrokabinet.id$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name astrokabinet.id www.astrokabinet.id;

    # Redirect www to non-www
    if ($host = www.astrokabinet.id) {
        return 301 https://astrokabinet.id$request_uri;
    }

    # SSL Configuration (Let's Encrypt or Cloudflare Origin CA)
    ssl_certificate /etc/letsencrypt/live/astrokabinet.id/fullchain.pem; # Or use Cloudflare Origin CA: /etc/nginx/ssl/cloudflare_fullchain.pem
    ssl_certificate_key /etc/letsencrypt/live/astrokabinet.id/privkey.pem; # Or use Cloudflare Origin CA: /etc/nginx/ssl/cloudflare_privkey.pem
    ssl_trusted_certificate /etc/letsencrypt/live/astrokabinet.id/chain.pem; # Or use Cloudflare CA: /etc/nginx/ssl/cloudflare_ca.pem

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s; # Use Cloudflare's DNS for OCSP
    resolver_timeout 5s;

    # Security Headers (aligned with Cloudflare)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://www.youtube.com https://youtube.com; style-src 'self' 'unsafe-inline'; style-src-elem 'self' 'unsafe-inline'; img-src 'self' data: https: blob:; font-src 'self' data:; connect-src 'self' blob:; frame-src 'self' https://www.youtube.com https://youtube.com; base-uri 'self'; form-action 'self';" always;
    # HSTS managed by Cloudflare, but keep for non-proxied requests
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), camera=(), microphone=()" always;

    # Document Root
    root /var/www/astrokabinet.id/public;
    index index.php index.html index.htm;

    # Logging with Cloudflare IPs
    access_log /var/log/nginx/astrokabinet.id.access.log combined;
    error_log /var/log/nginx/astrokabinet.id.error.log;

    # Gzip Compression (complements Cloudflare's compression)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Client Max Body Size
    client_max_body_size 100M;

    # Rate Limiting for API
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Laravel specific configuration
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        limit_req zone=api_limit burst=20 nodelay; # Apply rate limiting
    }

    # Handle PHP files
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        # Cloudflare and Security
        fastcgi_param HTTP_PROXY "";
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
        fastcgi_param REMOTE_ADDR $http_cf_connecting_ip; # Use Cloudflare's IP
    }

    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|tar|woff|svg|ttf|eot|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /\.ht {
        deny all;
    }

    location ~ /\.env {
        deny all;
    }

    # Block access to vendor and other sensitive directories
    location ~ ^/(vendor|storage|bootstrap|config|database|resources|routes|tests)/ {
        deny all;
        return 404;
    }

    # Allow Public Storage
    location ~ ^/storage/(.*)$ {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Custom Error Pages
    error_page 404 /index.php;
}
