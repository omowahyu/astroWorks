services:
  postgres:
    image: postgres:16-alpine
    container_name: astroworks_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: astroworks
      POSTGRES_USER: astroworks
      POSTGRES_PASSWORD: astroworks123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U astroworks -d astroworks"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - astroworks_network

  app:
    build: .
    container_name: astroworks_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      APP_NAME: AstroWorks
      APP_ENV: local
      APP_DEBUG: true
      APP_URL: http://localhost:8000
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: astroworks
      DB_USERNAME: astroworks
      DB_PASSWORD: astroworks123
      SESSION_DRIVER: database
      CACHE_STORE: database
      QUEUE_CONNECTION: database
    volumes:
      - ./storage:/app/storage
      - ./bootstrap/cache:/app/bootstrap/cache
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - astroworks_network

volumes:
  postgres_data:
    driver: local

networks:
  astroworks_network:
    driver: bridge