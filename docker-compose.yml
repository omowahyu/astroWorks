services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: my-app-app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
        environment:
            - "DB_HOST=mysql"
            - "DB_PORT=3306"
            - "DB_DATABASE=${DB_DATABASE}"
            - "DB_USERNAME=${DB_USERNAME}"
            - "DB_PASSWORD=${DB_PASSWORD}"
            - "REDIS_HOST=redis" # If you add a Redis service
        networks:
            - app-network

    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        container_name: my-app-nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app-network

    mysql:
        image: mysql:8.0
        container_name: my-app-mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    db-data:
