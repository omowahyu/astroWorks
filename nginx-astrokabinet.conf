server {
    listen 80;
    listen [::]:80;
    server_name astrokabinet.id www.astrokabinet.id;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name astrokabinet.id www.astrokabinet.id;

    # SSL Configuration (you'll need to obtain SSL certificates)
    # ssl_certificate /etc/ssl/certs/astrokabinet.id.crt;
    # ssl_certificate_key /etc/ssl/private/astrokabinet.id.key;
    
    # For now, comment out SSL and use HTTP only
    # Uncomment the SSL lines above when you have certificates
    
    root /var/www/astrokabinet.id/public;
    index index.php index.html index.htm;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript;

    # Handle Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Handle PHP files
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
        
        # Increase timeouts for large requests
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # Deny access to sensitive files
    location ~ /(?:\.env|\.git|\.gitignore|\.gitattributes|composer\.json|composer\.lock|package\.json|package-lock\.json|webpack\.mix\.js|artisan) {
        deny all;
    }

    # Handle static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle uploads directory
    location /uploads/ {
        expires 1M;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # Increase client max body size for file uploads
    client_max_body_size 100M;

    # Logging
    access_log /var/log/nginx/astrokabinet.id.access.log;
    error_log /var/log/nginx/astrokabinet.id.error.log;
}

# HTTP version for development/testing (remove in production)
server {
    listen 8080;
    server_name astrokabinet.id www.astrokabinet.id;

    root /var/www/astrokabinet.id/public;
    index index.php index.html index.htm;

    # Same configuration as HTTPS but without SSL
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
    }

    location ~ /\. {
        deny all;
    }

    location ~ /(?:\.env|\.git|\.gitignore|\.gitattributes|composer\.json|composer\.lock|package\.json|package-lock\.json|webpack\.mix\.js|artisan) {
        deny all;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    client_max_body_size 100M;

    access_log /var/log/nginx/astrokabinet.id.dev.access.log;
    error_log /var/log/nginx/astrokabinet.id.dev.error.log;
}
