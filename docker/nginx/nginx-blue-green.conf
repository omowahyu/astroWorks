# Upstream untuk Blue-Green Deployment
upstream app_backend {
    # Default ke blue, bisa di-switch ke green
    server app-blue:9000 weight=100;
    # server app-green:9000 weight=0;  # Uncomment dan set weight=100 untuk switch ke green
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;

# Server block untuk HTTP - redirect ke HTTPS
server {
    listen 80;
    server_name astrokabinet.id www.astrokabinet.id;
    
    # Health check endpoints (tidak redirect)
    location /up {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
    
    location /health {
        return 200 'Healthy';
        add_header Content-Type text/plain;
    }
    
    # Blue-Green deployment test endpoints
    location /test-blue {
        proxy_pass http://app-blue:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /test-green {
        proxy_pass http://app-green:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Redirect semua lainnya ke HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Server block untuk HTTPS
server {
    listen 443 ssl http2;
    server_name astrokabinet.id www.astrokabinet.id;
    root /var/www/public;

    # SSL Configuration (self-signed untuk testing, Cloudflare handle real SSL)
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # CSP Header
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.youtube.com https://youtube.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: blob: https:; media-src 'self' blob:; connect-src 'self'; frame-src 'self' https://www.youtube.com https://youtube.com;" always;

    # Cloudflare Real IP
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header CF-Connecting-IP;

    index index.php;
    charset utf-8;

    # Health check endpoints
    location /up {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }
    
    location /health {
        access_log off;
        return 200 'Healthy';
        add_header Content-Type text/plain;
    }

    # Blue-Green deployment test endpoints
    location /test-blue {
        fastcgi_pass app-blue:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        include fastcgi_params;
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
    }
    
    location /test-green {
        fastcgi_pass app-green:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        include fastcgi_params;
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
    }

    # Rate limiting untuk halaman sensitif
    location /login {
        limit_req zone=login burst=3 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    location /dashboard {
        limit_req zone=api burst=10 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Static files dengan caching optimal
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        try_files $uri $uri/ =404;
    }

    location ~* \.(css|js|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
    }

    # Main location block
    location / {
        limit_req zone=general burst=20 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Special files
    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
        expires 1y;
    }
    
    location = /robots.txt { 
        access_log off; 
        log_not_found off; 
        expires 1d;
    }

    error_page 404 /index.php;

    # PHP-FPM configuration dengan load balancing
    location ~ \.php$ {
        limit_req zone=general burst=20 nodelay;
        
        fastcgi_pass app_backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # Optimasi FastCGI
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
        
        # Security untuk PHP
        fastcgi_param HTTP_PROXY "";
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
        
        include fastcgi_params;
    }

    # Block akses ke file sensitif
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block akses ke file konfigurasi
    location ~* \.(env|log|ini|conf|sql|bak|old|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block akses ke direktori sensitif
    location ~ ^/(storage|bootstrap|config|database|resources|tests|vendor)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
