name: Deploy Astrokabinet to Production

on:
  push:
    branches:
      - main

jobs:
  quality:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Install PHP Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Pint
        run: ./vendor/bin/pint --test

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Format and Lint Frontend
        run: |
          npm run format
          npm run lint

  deploy:
    needs: quality
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Install PHP Dependencies
        run: composer install --no-dev --optimize-autoloader --no-progress

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies and Build Assets
        run: |
          npm ci
          npm run build

      - name: Create deployment archive
        run: |
          tar --exclude='.git' \
              --exclude='.github' \
              --exclude='node_modules' \
              --exclude='.env*' \
              --exclude='README.md' \
              --exclude='tests' \
              --exclude='storage/logs/*' \
              --exclude='storage/framework/cache/*' \
              --exclude='storage/framework/sessions/*' \
              --exclude='storage/framework/views/*' \
              -czf deployment.tar.gz .

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create backup
            if [ -d "/var/www/astrokabinet.id" ]; then
              sudo cp -r /var/www/astrokabinet.id /var/www/astrokabinet.id.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Create and set permissions for application directory
            sudo mkdir -p /var/www/astrokabinet.id
            sudo chown -R ${{ secrets.REMOTE_USER }}:www-data /var/www/astrokabinet.id

            # Transfer and extract archive
            scp /home/runner/work/astrokabinet/astrokabinet/deployment.tar.gz /tmp/deployment.tar.gz
            cd /var/www/astrokabinet.id
            sudo tar -xzf /tmp/deployment.tar.gz
            sudo rm /tmp/deployment.tar.gz

            # Create .env file
            echo "${{ secrets.ENV }}" | sudo tee .env > /dev/null

            # Set up storage directories and permissions
            sudo mkdir -p storage/{logs,framework/cache,framework/sessions,framework/views} bootstrap/cache public/uploads
            sudo chown -R www-data:www-data /var/www/astrokabinet.id
            sudo find /var/www/astrokabinet.id -type f -exec chmod 644 {} \;
            sudo find /var/www/astrokabinet.id -type d -exec chmod 755 {} \;
            sudo chmod -R 775 storage bootstrap/cache

            # Run Laravel deployment commands
            cd /var/www/astrokabinet.id
            sudo -u www-data php artisan key:generate --force
            sudo -u www-data php artisan optimize:clear
            sudo -u www-data php artisan migrate --force
            sudo -u www-data php artisan config:cache
            sudo -u www-data php artisan route:cache
            sudo -u www-data php artisan view:cache
            sudo -u www-data php artisan storage:link
            sudo -u www-data php artisan optimize

            # Restart services
            sudo systemctl reload php8.2-fpm nginx
