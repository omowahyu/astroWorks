name: Deploy Astrokabinet to Production Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Setup Composer
        run: composer install --no-dev --optimize-autoloader --no-interaction --no-progress --prefer-dist

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.6
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

      - name: Run remote commands
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.REMOTE_TARGET }}

            # secrets.ENV_FILE_CONTENT
            echo "${{ secrets.ENV }}" > .env
            # --- Laravel Commands ---
            # Generate new app key if it's not already in .env or secrets
                    php artisan key:generate --force # --force is needed in non-interactive environments

            # Clear and re-cache Laravel config, routes, and views
                    php artisan optimize:clear # Clears all caches
                    php artisan config:cache
                    php artisan route:cache
                    php artisan view:cache

            # Run database migrations
                    php artisan migrate --force

            # Optional: Link storage for public access
                    php artisan storage:link # If you use storage:link

            # Optimize Laravel
                    php artisan optimize # This will re-run general optimizations after caching

            # --- Permissions (Ensure www-data can write to storage/cache) ---
                    sudo chown -R www-data:www-data storage bootstrap/cache # Ensure www-data owns these
                    sudo chmod -R 775 storage bootstrap/cache # Allow read/write for www-data and deployuser
                    sudo chmod -R 755 public/uploads # Example if you have an uploads directory


