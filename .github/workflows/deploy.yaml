name: Deploy Laravel App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, curl, dom, fileinfo, openssl, pdo, tokenizer, xml
          coverage: none

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies & build assets
        run: |
          npm install
          npm run build

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.REMOTE_USER }}
          SERVER_HOST: ${{ secrets.REMOTE_HOST }}
          SERVER_PORT: ${{ secrets.REMOTE_PORT }}
          DEPLOY_PATH: ${{ secrets.REMOTE_TARGET }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

          rsync -avz --delete --no-times \
            -e "ssh -i private_key -o StrictHostKeyChecking=no -p $SERVER_PORT" \
            ./ $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH

          ssh -i private_key -o StrictHostKeyChecking=no -p $SERVER_PORT $SERVER_USER@$SERVER_HOST << 'EOF'
            set -e
            cd $DEPLOY_PATH

            if [ ! -f artisan ]; then
              echo "Laravel not found. Aborting."
              exit 1
            fi

            if [ ! -f .env ] || ! grep -q "APP_KEY=" .env || grep -q "APP_KEY=$" .env; then
              echo "Generating application key..."
              php artisan key:generate --force
            fi

            echo "Running migrations..."
            php artisan migrate --force
            echo "Seeding admin..."
            php artisan db:seed --class=AdminUserSeeder --force

            echo "Clearing & caching config..."
            php artisan config:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            echo "âœ… Done deploying"
          EOF

          rm private_key
