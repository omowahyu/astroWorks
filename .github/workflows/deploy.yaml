name: Deploy Laravel App

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, curl, dom, pdo, pdo_mysql, zip

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: Install npm dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Add SSH key to ssh-agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add <(echo "$SSH_PRIVATE_KEY")
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        env:
          SERVER_HOST: ${{ secrets.REMOTE_HOST }}
          SERVER_USER: ${{ secrets.REMOTE_USER }}
          SERVER_PORT: ${{ secrets.REMOTE_PORT }}
          DEPLOY_PATH: ${{ secrets.REMOTE_TARGET }}
        run: |
          rsync -avz --delete --no-times \
            -e "ssh -o StrictHostKeyChecking=no -p $SERVER_PORT" \
            ./ $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH

          ssh -o StrictHostKeyChecking=no -p $SERVER_PORT $SERVER_USER@$SERVER_HOST << 'EOF'
            set -e
            cd $DEPLOY_PATH

            if [ ! -f artisan ]; then
              echo "Laravel not found. Aborting."
              exit 1
            fi

            if [ ! -f .env ] || ! grep -q "APP_KEY=" .env || grep -q "APP_KEY=$" .env; then
              echo "Generating application key..."
              php artisan key:generate --force
            fi

            echo "Running migrations..."
            php artisan migrate --force
            echo "Seeding admin..."
            php artisan db:seed --class=AdminUserSeeder --force

            echo "Clearing & caching configs..."
            php artisan config:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            echo "Done!"
          EOF
