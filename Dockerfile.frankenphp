# ---- Stage 1: Build ----
FROM dunglas/frankenphp:php8.2-builder AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    zip \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    nodejs \
    npm \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip

# Set working directory
WORKDIR /app

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy dependency files for caching
COPY database/ database/
COPY composer.json composer.lock ./
RUN composer install --no-dev --no-interaction --no-plugins --no-scripts --prefer-dist

# Copy application source
COPY . .

# Create .env from example for build
RUN cp .env.example .env

# Generate application key
RUN php artisan key:generate

# Build frontend assets
RUN npm install && npm run build

# Cache Laravel config and routes
RUN php artisan config:cache
RUN php artisan route:cache  
RUN php artisan view:cache

# Clean up build files
RUN rm -f .env .env.example docker-compose.yml Dockerfile

# ---- Stage 2: Production ----
FROM dunglas/frankenphp:php8.2

# Install PHP extensions
RUN install-php-extensions \
    pdo_mysql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /app /app

# Set proper permissions
RUN chown -R www-data:www-data /app \
    && chmod -R 755 /app \
    && chmod -R 775 /app/storage /app/bootstrap/cache

# Create Caddyfile for FrankenPHP
RUN echo ':80 {' > /etc/caddy/Caddyfile && \
    echo '    root * /app/public' >> /etc/caddy/Caddyfile && \
    echo '    encode gzip' >> /etc/caddy/Caddyfile && \
    echo '    php_fastcgi unix//var/run/php/php-fpm.sock' >> /etc/caddy/Caddyfile && \
    echo '    file_server' >> /etc/caddy/Caddyfile && \
    echo '}' >> /etc/caddy/Caddyfile

# Expose port 80 for FrankenPHP
EXPOSE 80

# Start FrankenPHP
CMD ["frankenphp", "run", "--config", "/etc/caddy/Caddyfile"]
